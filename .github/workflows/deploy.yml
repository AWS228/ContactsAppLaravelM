name: Deploy Laravel to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      # 1. Update & Install PHP + required extensions
      - name: Install PHP 8.3 and Extensions
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y software-properties-common
          sudo add-apt-repository ppa:ondrej/php -y
          sudo apt update
          sudo apt install -y \
            php8.3 php8.3-cli php8.3-mbstring php8.3-xml php8.3-bcmath \
            php8.3-curl php8.3-mysql php8.3-fpm php8.3-zip php8.3-gd \
            php8.3-tokenizer php8.3-common php8.3-pgsql php8.3-soap php8.3-intl \
            unzip curl git zip

      # 2. Install Composer if missing
      - name: Install Composer
        run: |
          if ! command -v composer >/dev/null 2>&1; then
            cd ~
            curl -sS https://getcomposer.org/installer | php
            sudo mv composer.phar /usr/local/bin/composer
          fi

      # 3. Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # 4. Deploy code to Apache directory
      - name: Sync Code
        run: |
          APP_DIR="/var/www/laravelapp"
          sudo mkdir -p $APP_DIR
          sudo rsync -a --delete --exclude '.env' "$GITHUB_WORKSPACE"/ $APP_DIR/
          cd $APP_DIR

      # 5. Ensure .env exists
      - name: Ensure .env Exists
        run: |
          cd /var/www/laravelapp
          if [ ! -f ".env" ]; then
            if [ -f ".env.example" ]; then
              sudo mv .env.example .env
            else
              echo "APP_NAME=Laravel" > .env
              echo "APP_ENV=production" >> .env
              echo "APP_KEY=" >> .env
              echo "APP_DEBUG=false" >> .env
              echo "APP_URL=http://localhost" >> .env
            fi
          fi

      - name: Update incompatible dependencies
        run: |
          cd /var/www/laravelapp
          composer update nette/schema nette/utils league/config --with-all-dependencies --no-interaction

      # 6. Install Laravel dependencies
      - name: Install PHP Dependencies
        run: |
          cd /var/www/laravelapp
          composer install --no-interaction --prefer-dist --optimize-autoloader

      # 7. Generate App Key
      - name: Generate App Key
        run: |
          cd /var/www/laravelapp
          if ! grep -q "APP_KEY=" .env || [ -z "$(grep 'APP_KEY=' .env | cut -d '=' -f2)" ]; then
            php artisan key:generate --force
          fi

      # 8. Run migrations
      - name: Run Migrations
        run: |
          cd /var/www/laravelapp
          php artisan migrate --force || echo "⚠️ Migrations skipped (check DB config)"

      # 9. Set correct permissions
      - name: Set Permissions
        run: |
          sudo chown -R www-data:www-data /var/www/laravelapp
          sudo find /var/www/laravelapp -type f -exec chmod 644 {} \;
          sudo find /var/www/laravelapp -type d -exec chmod 755 {} \;
          sudo chmod -R 775 /var/www/laravelapp/storage /var/www/laravelapp/bootstrap/cache

      # 10. Cache Config & Routes
      - name: Cache Config & Routes
        run: |
          cd /var/www/laravelapp
          php artisan config:clear
          php artisan route:clear
          php artisan view:clear
          php artisan config:cache
          php artisan route:cache

      # 11. Restart Apache
      - name: Restart Apache
        run: |
          sudo systemctl restart apache2
