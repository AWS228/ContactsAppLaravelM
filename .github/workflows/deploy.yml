name: Deploy Laravel to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      # 1. Update & Install PHP + required extensions
      - name: Install PHP 8.3 and Extensions
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y software-properties-common
          sudo add-apt-repository ppa:ondrej/php -y
          sudo apt update
          sudo apt install -y \
            php8.3 php8.3-cli php8.3-mbstring php8.3-xml php8.3-bcmath \
            php8.3-curl php8.3-mysql php8.3-fpm php8.3-zip php8.3-gd \
            php8.3-tokenizer php8.3-common php8.3-pgsql php8.3-soap php8.3-intl \
            unzip curl git zip

      # 2. Install Composer if missing
      - name: Install Composer
        run: |
          if ! command -v composer >/dev/null 2>&1; then
            cd ~
            curl -sS https://getcomposer.org/installer | php
            sudo mv composer.phar /usr/local/bin/composer
          fi

      # 3. Checkout repository (goes into $GITHUB_WORKSPACE)
      - name: Checkout Code
        uses: actions/checkout@v4

      # 4. Set Laravel project path (workspace path)
      - name: Set Laravel Path Variable
        run: echo "APP_DIR=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      # 5. Update incompatible dependencies (PHP 8.3 fix)
      - name: Update incompatible dependencies
        run: |
          cd $APP_DIR
          composer update nette/schema nette/utils league/config --with-all-dependencies --no-interaction

      # 6. Install Laravel dependencies
      - name: Install PHP Dependencies
        run: |
          cd $APP_DIR
          composer install --no-interaction --prefer-dist --optimize-autoloader

      # 7. Move .env.example to .env if missing
      - name: Prepare .env File
        run: |
          cd $APP_DIR
          if [ ! -f .env ]; then
            cp .env.example .env
          fi

      # 8. Generate App Key if missing
      - name: Generate App Key
        run: |
          cd $APP_DIR
          if ! grep -q "^APP_KEY=base64" .env || [ -z "$(grep '^APP_KEY=' .env | cut -d '=' -f2)" ]; then
            php artisan key:generate 
          fi

      # 9. Run migrations
      - name: Run Migrations
        run: |
          cd $APP_DIR
          php artisan migrate  || echo "⚠️ Migrations skipped (check DB config)"

      # 10. Set correct permissions
      - name: Set Permissions
        run: |
          sudo chown -R ubuntu:ubuntu $APP_DIR
          sudo find $APP_DIR -type f -exec chmod 644 {} \;
          sudo find $APP_DIR -type d -exec chmod 755 {} \;
          sudo chmod -R 775 $APP_DIR/storage $APP_DIR/bootstrap/cache

      # 11. Cache Config & Routes
      - name: Cache Config & Routes
        run: |
          cd $APP_DIR
          php artisan config:clear
          php artisan route:clear
          php artisan view:clear
          php artisan config:cache
          php artisan route:cache

      # 12. Restart Apache
      - name: Restart Apache
        run: sudo systemctl restart apache2
